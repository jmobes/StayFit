{
  "version": 3,
  "sources": [
    "components/LoginForm.jsx",
    "components/Spinner.jsx",
    "pages/Login.jsx",
    "pages/Signup.jsx",
    "components/HeaderButton.jsx",
    "pages/Home.jsx",
    "components/CreateExercise.jsx",
    "components/LogExercise.jsx",
    "components/ExerciseListItem.jsx",
    "components/ExerciseList.jsx",
    "components/DisplayExercises.jsx",
    "components/LogRoutine.jsx",
    "pages/Workout.jsx",
    "pages/History.jsx",
    "components/Chart.jsx",
    "pages/Progress.jsx",
    "pages/Records.jsx",
    "components/ProtectedRoute.jsx",
    "components/Header.jsx",
    "components/HomeLogout.jsx",
    "App.jsx",
    "index.js"
  ],
  "names": [
    "withRouter",
    "props",
    "useState",
    "email",
    "setEmail",
    "password",
    "setPassword",
    "handleSubmit",
    "e",
    "a",
    "preventDefault",
    "login",
    "history",
    "push",
    "onSubmit",
    "className",
    "error",
    "style",
    "fontSize",
    "color",
    "type",
    "placeholder",
    "onChange",
    "target",
    "value",
    "Spinner",
    "loading",
    "onClick",
    "to",
    "username",
    "setUsername",
    "usernameBlur",
    "setUsernameBlur",
    "emailBlur",
    "setEmailBlur",
    "passwordBlur",
    "setPasswordBlur",
    "setError",
    "options",
    "method",
    "headers",
    "body",
    "JSON",
    "stringify",
    "fetch",
    "res",
    "json",
    "user",
    "ok",
    "Error",
    "message",
    "required",
    "onBlur",
    "logout",
    "text",
    "Home",
    "CreateExercise",
    "name",
    "setName",
    "userId",
    "parse",
    "localStorage",
    "getItem",
    "toString",
    "length",
    "exercise",
    "user_id",
    "then",
    "result",
    "hideCreateExercise",
    "catch",
    "err",
    "LogExercise",
    "exerciseId",
    "setExerciseId",
    "setUserId",
    "set",
    "weight",
    "reps",
    "stats",
    "setStats",
    "setSets",
    "processing",
    "setProcessing",
    "inputRef",
    "useRef",
    "useEffect",
    "exercise_id",
    "current",
    "focus",
    "handleChange",
    "Number",
    "updatedStats",
    "dataset",
    "index",
    "category",
    "addSets",
    "routine_exercise_id",
    "map",
    "setData",
    "data",
    "startRoutine",
    "unfinished",
    "Promise",
    "resolve",
    "reject",
    "routine_id",
    "routineResult",
    "routine",
    "addExerciseToRoutine",
    "routineId",
    "routine_exercise",
    "row",
    "readOnly",
    "data-category",
    "data-index",
    "ref",
    "object",
    "Object",
    "values",
    "forEach",
    "hideLogExercise",
    "ExerciseListItem",
    "showLogExercise",
    "showEdit",
    "delete",
    "ExerciseList",
    "exercises",
    "setExercises",
    "edit",
    "setEdit",
    "token",
    "Authorization",
    "deleteExercise",
    "id",
    "deleted",
    "filter",
    "showList",
    "showAddExercise",
    "DisplayExercises",
    "LogRoutine",
    "Fragment",
    "setDisplayExercises",
    "arr",
    "previous",
    "deleteExerciseFromRoutine",
    "logWorkout",
    "Workout",
    "displayExercises",
    "createExercise",
    "setCreateExercise",
    "logExercise",
    "setLogExercise",
    "setExercise",
    "setRoutine",
    "setRoutineId",
    "workoutLogged",
    "setWorkoutLogged",
    "routineInfo",
    "view",
    "routineCopy",
    "updatedRoutine",
    "setTimeout",
    "History",
    "Date",
    "dates",
    "setDates",
    "setUser",
    "workout",
    "setWorkout",
    "formatDate",
    "date",
    "year",
    "getFullYear",
    "month",
    "getMonth",
    "day",
    "getDate",
    "dateArray",
    "dateStr",
    "date_end",
    "split",
    "ex",
    "getDates",
    "event",
    "tileClassName",
    "find",
    "ele",
    "Chart",
    "chartData",
    "setChartData",
    "weights",
    "formattedDate",
    "max",
    "labels",
    "datasets",
    "label",
    "backgroundColor",
    "borderColor",
    "borderWidth",
    "fill",
    "console",
    "chart",
    "title",
    "display",
    "toUpperCase",
    "responsive",
    "maintainAspectRatio",
    "showLine",
    "Progress",
    "showExercises",
    "setShowExercises",
    "selected",
    "setSelected",
    "Records",
    "setMax",
    "max_weight",
    "ProtectedRoute",
    "Component",
    "component",
    "rest",
    "render",
    "Header",
    "HomeLogout",
    "App",
    "setToken",
    "setLoading",
    "responseData",
    "setItem",
    "removeItem",
    "path",
    "Signup",
    "exact",
    "ReactDOM",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.ed484012.chunk.js",
  "sourcesContent": [
    "import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./LoginForm.css\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\n\nconst LoginForm = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const authenticated = await props.login(email, password);\n    if (authenticated) {\n      props.history.push(\"/\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form__login\">\n      <div\n        className={`${\n          props.error ? \"form__login__email error\" : \"form__login__email\"\n        }`}\n      >\n        <MailOutlineIcon\n          className=\"icon-email\"\n          style={{ fontSize: 30, color: \"#fff\" }}\n        />\n        <input\n          type=\"email\"\n          className=\"form__login__email__input\"\n          placeholder={`${props.error ? \"Invalid email\" : \"stayfit@gmail.com\"}`}\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n        />\n      </div>\n      <div\n        className={`${\n          props.error ? \"form__login__password error\" : \"form__login__password\"\n        }`}\n      >\n        <VpnKeyIcon\n          className=\"icon-password\"\n          style={{ fontSize: 30, color: \"#fff\" }}\n        />\n        <input\n          type=\"password\"\n          className=\"form__login__password__input\"\n          placeholder={`${props.error ? \"Invalid password\" : \"password\"}`}\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n        />\n      </div>\n      <input type=\"submit\" value=\"Login\" className=\"button__login\" />\n    </form>\n  );\n};\n\nexport default withRouter(LoginForm);\n",
    "import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = (props) => {\n  return (\n    <div className=\"spinner__container\">\n      <div className=\"spinner__overlay\">\n        <div className=\"spinner\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n",
    "import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"./Login.css\";\n\nimport LoginForm from \"../components/LoginForm\";\nimport Spinner from \"../components/Spinner\";\n\nconst Login = (props) => {\n  return (\n    <>\n      {props.loading ? <Spinner /> : null}\n      <LoginForm login={props.login} error={props.error} />\n      <p className=\"login__guest\">\n        Login as{\" \"}\n        <span\n          onClick={async () => {\n            const authenticated = await props.login(\"guest@guest.com\", \"guest\");\n            if (authenticated) {\n              props.history.push(\"/\");\n            }\n          }}\n          className=\"login__guest--text\"\n        >\n          GUEST\n        </span>\n      </p>\n      <p className=\"link__signup\">\n        Don't have an account?{\" \"}\n        <Link to=\"/signup\">\n          <span className=\"link__signup--text\">Signup here</span>\n        </Link>\n      </p>\n    </>\n  );\n};\n\nexport default withRouter(Login);\n",
    "import React, { useState } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport \"./Signup.css\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\n\nconst Signup = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usernameBlur, setUsernameBlur] = useState(false);\n  const [emailBlur, setEmailBlur] = useState(false);\n  const [passwordBlur, setPasswordBlur] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!username || !email || !password) {\n      setError(\"Please fill out all fields\");\n      return;\n    }\n    const options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ username, email, password }),\n    };\n\n    try {\n      const res = await fetch(\"/api/users\", options);\n      const user = await res.json();\n      if (!res.ok) {\n        throw new Error(user);\n      }\n      props.history.push(\"/\");\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"form__signup\">\n        <div\n          className={`${\n            !username && usernameBlur\n              ? \"form__signup__username form__signup__error\"\n              : \"form__signup__username\"\n          }`}\n        >\n          <PersonIcon\n            className=\"icon-person\"\n            style={{ fontSize: 30, color: \"#fff\" }}\n          />\n          <input\n            type=\"text\"\n            className=\"form__signup__username__input\"\n            placeholder=\"username\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n            required\n            onBlur={() => setUsernameBlur(true)}\n          />\n        </div>\n        <div\n          className={`${\n            !email && emailBlur\n              ? \"form__signup__email form__signup__error\"\n              : \"form__signup__email\"\n          }`}\n        >\n          <MailOutlineIcon\n            className=\"icon-email\"\n            style={{ fontSize: 30, color: \"#fff\" }}\n          />\n          <input\n            type=\"email\"\n            className=\"form__signup__email__input\"\n            placeholder=\"stayfit@gmail.com\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            required\n            onBlur={() => setEmailBlur(true)}\n          />\n        </div>\n        <div\n          className={`${\n            !password && passwordBlur\n              ? \"form__signup__password form__signup__error\"\n              : \"form__signup__password\"\n          }`}\n        >\n          <VpnKeyIcon\n            className=\"icon-password\"\n            style={{ fontSize: 30, color: \"#fff\" }}\n          />\n          <input\n            type=\"password\"\n            className=\"form__signup__password__input\"\n            placeholder=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            required\n            onBlur={() => setPasswordBlur(true)}\n          />\n        </div>\n        {error && <p className=\"signup__error\">{error}</p>}\n        <input type=\"submit\" value=\"Signup\" className=\"button__signup\" />\n      </form>\n      <Link to=\"/login\">\n        <p className=\"signup__cancel\">Back to Login</p>\n      </Link>\n    </>\n  );\n};\n\nexport default withRouter(Signup);\n",
    "import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./HeaderButton.css\";\n\nconst HeaderButton = (props) => {\n  return (\n    <button\n      onClick={() => {\n        props.logout && props.logout();\n        props.history.push(props.logout ? \"/login\" : \"/\");\n      }}\n      className=\"header__button\"\n    >\n      {props.text}\n    </button>\n  );\n};\n\nexport default withRouter(HeaderButton);\n",
    "import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\nimport HeaderButton from \"../components/HeaderButton\";\nimport FitnessCenterIcon from \"@material-ui/icons/FitnessCenter\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\n\nconst Home = (props) => {\n  return (\n    <div className=\"home\">\n      <div className=\"home__nav\">\n        <ul className=\"home__nav__list\">\n          <Link to=\"/workout\">\n            <li className=\"home__nav__list__item\">\n              <div className=\"home__nav__list__item--bg\">\n                <FitnessCenterIcon style={{ fontSize: 100 }} />\n              </div>\n              <p className=\"home__nav__list__item__text\">workout</p>\n            </li>\n          </Link>\n          <Link to=\"/history\">\n            <li className=\"home__nav__list__item\">\n              <div className=\"home__nav__list__item--bg\">\n                <HistoryIcon style={{ fontSize: 100 }} />\n              </div>\n              <p className=\"home__nav__list__item__text\">history</p>\n            </li>\n          </Link>\n          <Link to=\"/progress\">\n            <li className=\"home__nav__list__item\">\n              <div className=\"home__nav__list__item--bg\">\n                <TimelineIcon style={{ fontSize: 100 }} />\n              </div>\n              <p className=\"home__nav__list__item__text\">progress</p>\n            </li>\n          </Link>\n          <Link to=\"/records\">\n            <li className=\"home__nav__list__item\">\n              <div className=\"home__nav__list__item--bg\">\n                <FlagIcon style={{ fontSize: 100 }} />\n              </div>\n              <p className=\"home__nav__list__item__text\">records</p>\n            </li>\n          </Link>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n",
    "import React, { useState } from \"react\";\nimport \"./CreateExercise.css\";\n\nconst CreateExercise = (props) => {\n  const [name, setName] = useState(\"\");\n  const [exercise, setExercise] = useState();\n  const [error, setError] = useState();\n\n  const addExerciseToList = () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const userId = user.userId.toString();\n    if (!name || name.length < 3 || !userId) {\n      setError(\"Exercise must be at least 3 characters\");\n      return;\n    }\n    const exercise = {\n      user_id: userId,\n      name: name,\n    };\n    const options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(exercise),\n    };\n    fetch(\"/api/exercises\", options)\n      .then((result) => {\n        if (!result.ok) {\n          throw new Error(\"Duplicate Exercise\");\n        }\n        return result.json();\n      })\n      .then((exercise) => {\n        props.hideCreateExercise();\n      })\n      .catch((err) =>\n        setError(err.message || \"Network error. Unable to create exercise.\")\n      );\n  };\n\n  return (\n    <div className=\"exercise__create\">\n      <p className=\"exercise__create__title\">Exercise Name</p>\n      <input\n        placeholder=\"barbell squat\"\n        type=\"text\"\n        className=\"exercise__create__input\"\n        onChange={(e) => setName(e.target.value)}\n      />\n      {error ? <p className=\"exercise__create__error\">{error}</p> : null}\n      <button\n        onClick={addExerciseToList}\n        className=\"exercise__create__btn--add\"\n      >\n        Add Exercise\n      </button>\n      <button\n        onClick={props.hideCreateExercise}\n        className=\"exercise__create__btn--cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  );\n};\n\nexport default CreateExercise;\n",
    "import React, { useState, useEffect, useRef } from \"react\";\nimport \"./LogExercise.css\";\n\nimport Inputs from \"./Inputs\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst LogExercise = (props) => {\n  const [exerciseId, setExerciseId] = useState();\n  const [userId, setUserId] = useState();\n  const [stats, setStats] = useState([{ set: 1, weight: \"\", reps: \"\" }]);\n  const [error, setError] = useState(\"\");\n  const [sets, setSets] = useState();\n  const [processing, setProcessing] = useState(false);\n  const inputRef = useRef();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user) {\n      return;\n    }\n    const userId = user.userId;\n    setExerciseId(props.exercise.exercise_id);\n    setUserId(userId);\n\n    return () => {\n      setProcessing(false);\n    };\n  }, []);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [stats.length]);\n\n  const handleChange = (e) => {\n    if (Number(e.target.value) || e.target.value === \"\") {\n      const updatedStats = [...stats];\n      updatedStats[e.target.dataset.index][e.target.dataset.category] =\n        e.target.value;\n      setStats(updatedStats);\n    } else {\n      return;\n    }\n  };\n\n  const addSets = (routine_exercise_id) => {\n    try {\n      stats.map((setData) => {\n        const options = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            reps: setData.reps,\n            weight: setData.weight,\n            routine_exercise_id: routine_exercise_id.toString(),\n            user_id: userId.toString(),\n          }),\n        };\n        fetch(\"/api/stats\", options)\n          .then((res) => res.json())\n          .then((data) => setSets(data))\n          .catch((err) => setError(\"Network error. Unable to add set(s).\"));\n      });\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  const startRoutine = async () => {\n    if (!userId) return;\n\n    try {\n      const result = await fetch(\n        `/api/routines/null-date/${userId}`\n      );\n      const unfinished = await result.json();\n      if (unfinished.length > 0) {\n        return new Promise((resolve, reject) => {\n          resolve(unfinished[0].routine_id);\n        });\n      }\n      const options = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          user_id: userId.toString(),\n        }),\n      };\n      const routineResult = await fetch(\n        `/api/routines`,\n        options\n      );\n      const routine = await routineResult.json();\n      return new Promise((resolve, reject) => {\n        resolve(routine.routine_id);\n      });\n    } catch (err) {\n      setError(\"Network error. Unable to log exercise.\");\n    }\n  };\n\n  const addExerciseToRoutine = async (routine_id) => {\n    if (!userId) return;\n\n    try {\n      const routineId = routine_id;\n      if (!routineId || !exerciseId) return;\n      const options = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          routine_id: routineId.toString(),\n          exercise_id: exerciseId.toString(),\n        }),\n      };\n      const result = await fetch(\n        `/api/routine-exercises`,\n        options\n      );\n      const routine_exercise = await result.json();\n      return new Promise((resolve, reject) => {\n        resolve(routine_exercise.routine_exercise_id);\n      });\n    } catch (err) {\n      setError(\"Network error. Unable to log exercise.\");\n    }\n  };\n\n  return (\n    <div className=\"log__exercise\">\n      <h3 className=\"log__exercise__title\">{props.exercise.name}</h3>\n      <div className=\"log__exercise__data\">\n        <div className=\"log__exercise__data__columns\">\n          <h4 className=\"log__exercise__data__column\">Set</h4>\n          <h4 className=\"log__exercise__data__column\">Weight</h4>\n          <h4 className=\"log__exercise__data__column\">Reps</h4>\n        </div>\n        <div className=\"log__exercise__data__rows\">\n          {stats.map((row, index) => {\n            return (\n              <div key={index} className=\"log__exercise__data__row\">\n                <input\n                  placeholder=\"set\"\n                  type=\"text\"\n                  className=\"log__exercise__data__row__item\"\n                  value={row.set}\n                  readOnly\n                  data-category=\"set\"\n                  data-index={index}\n                />\n                <input\n                  placeholder=\"weight\"\n                  type=\"text\"\n                  className=\"log__exercise__data__row__item\"\n                  data-category=\"weight\"\n                  data-index={index}\n                  value={stats[index].weight}\n                  onChange={handleChange}\n                  ref={inputRef}\n                />\n                <input\n                  placeholder=\"reps\"\n                  type=\"text\"\n                  className=\"log__exercise__data__row__item\"\n                  data-category=\"reps\"\n                  data-index={index}\n                  value={stats[index].reps}\n                  onChange={handleChange}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <AddIcon\n        onClick={() => {\n          setStats([...stats, { set: stats.length + 1, weight: \"\", reps: \"\" }]);\n        }}\n        style={{ fontSize: 50 }}\n        className=\"add__set__button\"\n      />\n      <div className=\"log__exercise__buttons\">\n        {error && <p className=\"log__exercise__error\">{error}</p>}\n        <button\n          onClick={async () => {\n            if (processing) return;\n            setProcessing(true);\n            try {\n              stats.map((object) => {\n                const valuesArray = Object.values(object);\n                valuesArray.forEach((value, index) => {\n                  if (!value) {\n                    throw new Error(\"Please fill out all fields\");\n                  }\n                });\n              });\n              const routineId = await startRoutine();\n              const routine_exercise_id = await addExerciseToRoutine(routineId);\n              if (!routine_exercise_id) {\n                throw new Error(\"Network error. Unable to add sets.\");\n              }\n              addSets(routine_exercise_id);\n              props.hideLogExercise();\n            } catch (err) {\n              setError(err.message);\n            }\n            setProcessing(false);\n          }}\n          className=\"log__exercise__button\"\n        >\n          Log Exercise\n        </button>\n        <button\n          onClick={props.hideLogExercise}\n          className=\"cancel__exercise__button\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LogExercise;\n",
    "import React, { useState } from \"react\";\nimport \"./ExerciseListItem.css\";\n\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\nconst ExerciseListItem = (props) => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const userId = user.userId;\n  return (\n    <div className=\"exercise__list__item__container\">\n      <p\n        onClick={() => props.showLogExercise(props.exercise)}\n        className=\"exercise__list__item\"\n      >\n        {props.exercise.name}\n      </p>\n      {props.showEdit && userId === props.exercise.user_id && (\n        <RemoveIcon\n          className=\"exercise__list__item__icon\"\n          style={{ fontSize: 25 }}\n          onClick={() => props.delete(props.exercise.exercise_id)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ExerciseListItem;\n",
    "import React, { useState, useEffect } from \"react\";\nimport \"./ExerciseList.css\";\n\nimport ExerciseListItem from \"./ExerciseListItem\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst ExerciseList = (props) => {\n  const [exercises, setExercises] = useState();\n  const [edit, setEdit] = useState(false);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user) {\n      setExercises(null);\n      return;\n    }\n    const token = user.token;\n    const user_id = user.userId;\n    fetch(`/api/exercises/${user_id}`, {\n      headers: {\n        Authorization: token,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => setExercises(data))\n      .catch((err) => setError(\"Network error. Cannot retrieve exercises.\"));\n  }, []);\n\n  const deleteExercise = (id) => {\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    fetch(`/api/routine-data/${id}`, options)\n      .then((result) => result.json())\n      .then((deleted) =>\n        setExercises(\n          exercises.filter(\n            (exercise) => exercise.exercise_id !== deleted.exercise_id\n          )\n        )\n      )\n      .catch((err) => setError(\"Network error. Unable to process request.\"));\n  };\n\n  return (\n    <div className=\"exercise__list\">\n      <div className=\"exercise__list__headers\">\n        <div\n          onClick={() => props.showList(false)}\n          className=\"exercise__list__headers__cancel\"\n        >\n          cancel\n        </div>\n        <div\n          onClick={() => setEdit(!edit)}\n          className={`exercise__list__headers__edit ${\n            edit ? \"exercise__list__headers__edit--active\" : \"\"\n          }`}\n        >\n          edit\n        </div>\n        <AddIcon\n          className=\"exercise__list__headers__add\"\n          style={{ fontSize: 35 }}\n          onClick={props.showAddExercise}\n        />\n      </div>\n      <div className=\"exercise__list__container\">\n        {exercises && !error ? (\n          exercises.map((exercise) => {\n            return (\n              <ExerciseListItem\n                key={exercise.exercise_id}\n                exercise={exercise}\n                delete={deleteExercise}\n                showEdit={edit}\n                showLogExercise={props.showLogExercise}\n              />\n            );\n          })\n        ) : (\n          <p className=\"exercise__list__error\">{error}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ExerciseList;\n",
    "import React, { useEffect, useState } from \"react\";\nimport ExerciseList from \"./ExerciseList\";\n\nconst DisplayExercises = (props) => {\n  return (\n    <ExerciseList\n      showList={props.showList}\n      showAddExercise={props.showAddExercise}\n      showLogExercise={props.showLogExercise}\n    />\n  );\n};\n\nexport default DisplayExercises;\n",
    "import React, { useState } from \"react\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\n\nconst LogRoutine = (props) => {\n  return (\n    <React.Fragment>\n      <div\n        className=\"workout__select\"\n        onClick={() => props.setDisplayExercises(true)}\n      >\n        <p className=\"workout__select__title\">select exercise</p>\n        <AddIcon className=\"workout__select__icon\" style={{ fontSize: 30 }} />\n      </div>\n      <div className=\"workout__data\">\n        <div className=\"workout__data__ctn\">\n          <div className=\"workout__data__row\">\n            {props.routine && !!props.routine.length && !props.error ? (\n              props.routine.map((current, index, arr) => {\n                const previous = arr[index - 1];\n                const next = arr[index + 1];\n                if (!previous || previous.name !== current.name) {\n                  return (\n                    <div key={index} className=\"workout__data__exercise\">\n                      <p className=\"workout__data__exercise__name\">\n                        {current.name}\n                      </p>\n                      <DeleteOutlineIcon\n                        style={{ fontSize: 35 }}\n                        className=\"workout__data__exercise__delete\"\n                        onClick={() =>\n                          props.deleteExerciseFromRoutine(\n                            current.exercise_id,\n                            props.routineId\n                          )\n                        }\n                      />\n                    </div>\n                  );\n                } else {\n                  return null;\n                }\n              })\n            ) : (\n              <p>{props.error}</p>\n            )}\n          </div>\n        </div>\n        {props.routine && props.routine.length ? (\n          <button onClick={props.logWorkout} className=\"log__workout\">\n            Log Workout\n          </button>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default LogRoutine;\n",
    "import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Workout.css\";\n\nimport HeaderButton from \"../components/HeaderButton\";\nimport FitnessCenterIcon from \"@material-ui/icons/FitnessCenter\";\nimport CreateExercise from \"../components/CreateExercise\";\nimport LogExercise from \"../components/LogExercise\";\nimport DisplayExercises from \"../components/DisplayExercises\";\nimport LogRoutine from \"../components/LogRoutine\";\n\nconst Workout = (props) => {\n  const [displayExercises, setDisplayExercises] = useState(false);\n  const [createExercise, setCreateExercise] = useState(false);\n  const [logExercise, setLogExercise] = useState(false);\n  const [exercise, setExercise] = useState(null);\n  const [routine, setRoutine] = useState();\n  const [routineId, setRoutineId] = useState();\n  const [workoutLogged, setWorkoutLogged] = useState(false);\n  const [error, setError] = useState();\n  const [processing, setProcessing] = useState(false);\n\n  useEffect(async () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user) {\n      return;\n    }\n    const userId = user.userId;\n    try {\n      const result = await fetch(\n        `/api/routines/null-date/${userId}`\n      );\n      const unfinished = await result.json();\n      if (unfinished.length < 1) {\n        return;\n      }\n      const routineId = unfinished[0].routine_id;\n      setRoutineId(routineId);\n      const res = await fetch(\n        `/api/routine-data/${userId}/${routineId}`\n      );\n      const routineInfo = await res.json();\n      setRoutine(routineInfo);\n    } catch (err) {\n      setError(\"Network error. Could not process request.\");\n    }\n  }, [displayExercises, createExercise, logExercise]);\n\n  const showAddExercise = () => {\n    setCreateExercise(true);\n    setDisplayExercises(false);\n  };\n  const showLogExercise = (exercise) => {\n    setLogExercise(true);\n    setDisplayExercises(false);\n    setExercise(exercise);\n  };\n  const hideLogExercise = () => {\n    setLogExercise(false);\n  };\n\n  const deleteExerciseFromRoutine = async (exerciseId, routineId) => {\n    if (processing) return;\n    if (!Number(exerciseId) || !Number(routineId)) return;\n    setProcessing(true);\n\n    try {\n      const result = await fetch(\n        `/api/stats/${routineId}/${exerciseId}`,\n        {\n          method: \"DELETE\",\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      const deleted = await result.json();\n      const routineCopy = [...routine];\n      const updatedRoutine = routineCopy.filter(\n        (stats) => stats.routine_exercise_id !== deleted[0].routine_exercise_id\n      );\n      setRoutine(updatedRoutine);\n    } catch (err) {\n      setError(\"Network error. Try again later\");\n    }\n    setProcessing(false);\n  };\n\n  const logWorkout = async () => {\n    if (processing) return;\n    if (!routineId) return;\n    setProcessing(true);\n\n    const options = {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const routine = await fetch(\n        `/api/routines/${routineId}`,\n        options\n      );\n      const updatedRoutine = await routine.json();\n      setRoutine(null);\n      setRoutineId(null);\n      setWorkoutLogged(true);\n      setTimeout(() => {\n        setWorkoutLogged(false);\n      }, 5000);\n    } catch (ex) {\n      setError(\"Network error. Could not process request.\");\n    }\n    setProcessing(false);\n  };\n\n  let view;\n  if (displayExercises) {\n    view = (\n      <DisplayExercises\n        showList={setDisplayExercises}\n        showAddExercise={showAddExercise}\n        showLogExercise={showLogExercise}\n      />\n    );\n  } else if (createExercise) {\n    view = (\n      <CreateExercise hideCreateExercise={() => setCreateExercise(false)} />\n    );\n  } else if (logExercise) {\n    view = (\n      <LogExercise hideLogExercise={hideLogExercise} exercise={exercise} />\n    );\n  } else {\n    view = (\n      <LogRoutine\n        setDisplayExercises={setDisplayExercises}\n        routine={routine}\n        deleteExerciseFromRoutine={deleteExerciseFromRoutine}\n        routineId={routineId}\n        logWorkout={logWorkout}\n        error={error}\n      />\n    );\n  }\n\n  return (\n    <div className=\"workout\">\n      <div className=\"workout__title\">\n        <FitnessCenterIcon\n          className=\"workout__icon\"\n          style={{ fontSize: 100 }}\n        />\n        <h3 className=\"workout__text\">WORKOUT</h3>\n        {logExercise ? (\n          <p className=\"workout__instructions\">\n            Enter exercise data. Click the <span>+</span> icon to add a new set.\n          </p>\n        ) : (\n          <p className=\"workout__instructions\">\n            Select or create an exercise from the dropdown list to get started\n          </p>\n        )}\n      </div>\n      {view}\n      <div className={`message__modal ${workoutLogged ? \"\" : \"hidden\"}`}>\n        <p className=\"message__text\">Workout Logged</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Workout;\n",
    "import React, { useState, useEffect } from \"react\";\n\nimport Calendar from \"react-calendar\";\nimport \"./History.css\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport HeaderButton from \"../components/HeaderButton\";\n\nconst History = (props) => {\n  const [value, onChange] = useState(new Date());\n  const [dates, setDates] = useState();\n  const [user, setUser] = useState();\n  const [workout, setWorkout] = useState();\n  const [error, setError] = useState();\n  const [processing, setProcessing] = useState(false);\n\n  const getDates = () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const userId = user.userId;\n    setUser(userId);\n    const dateArray = [];\n    fetch(`/api/routines/${userId}`)\n      .then((res) => res.json())\n      .then((dates) => {\n        dates.map((dateStr) => {\n          if (!dateStr.date_end) return;\n          const split = dateStr.date_end.split(\"T\");\n          dateArray.push(split[0]);\n        });\n        setDates(dateArray);\n      })\n      .catch((ex) => setError(\"Network error. Try again later.\"));\n  };\n\n  const formatDate = (date) => {\n    const year = date.getFullYear();\n    const month =\n      date.getMonth() + 1 < 10\n        ? \"0\" + (date.getMonth() + 1)\n        : date.getMonth() + 1;\n    const day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n    return `${year}-${month}-${day}`;\n  };\n\n  useEffect(() => {\n    getDates();\n  }, []);\n\n  return (\n    <div className=\"history\">\n      <div className=\"history__title\">\n        <HistoryIcon className=\"history__icon\" style={{ fontSize: 100 }} />\n        <h3 className=\"history__text\">HISTORY</h3>\n      </div>\n      <p className=\"history__instructions\">\n        Select a date to view a past routine.\n      </p>\n      <p className=\"history__instructions-2\">\n        Dates in <span>green</span> have exercise data\n      </p>\n      <div className=\"history__calendar\">\n        <Calendar\n          onChange={(value, event) => {\n            if (processing) return;\n            setProcessing(true);\n            fetch(\n              `/api/routine-data/data/${user}/${formatDate(\n                value\n              )}`\n            )\n              .then((res) => res.json())\n              .then((data) => {\n                setWorkout(data);\n              })\n              .catch((err) => setError(\"Network error. Try again later.\"));\n            setProcessing(false);\n          }}\n          value={value}\n          tileClassName={({ date, view }) => {\n            if (!dates) return;\n\n            if (dates.find((ele) => ele === formatDate(date))) {\n              return \"bg-green\";\n            }\n          }}\n        />\n      </div>\n      {error ? <p className=\"history__error\">{error}</p> : null}\n      <div className=\"history__routine\">\n        {workout &&\n          workout.map((current, index, arr) => {\n            const previous = arr[index - 1];\n            const next = arr[index + 1];\n            return !previous || previous.name !== current.name ? (\n              <React.Fragment key={index}>\n                <p className=\"history__routine__exercise\">{current.name}</p>\n                <p className=\"history__routine__set\">{`${current.weight} x ${current.reps}`}</p>\n              </React.Fragment>\n            ) : (\n              <p\n                key={index}\n                className=\"history__routine__set\"\n              >{`${current.weight} x ${current.reps}`}</p>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Spinner from \"./Spinner\";\n\nconst Chart = (props) => {\n  const [chartData, setChartData] = useState();\n  const [error, setError] = useState();\n\n  const chart = () => {\n    const userId = props.exercise.user_id;\n    const exerciseId = props.exercise.exercise_id;\n    const weights = [];\n    const dates = [];\n\n    setChartData(null);\n    setError(null);\n\n    fetch(`/api/progress/${userId}/${exerciseId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        data.map((stats) => {\n          const date = new Date(stats.date_end);\n          const formattedDate =\n            date.getMonth() +\n            1 +\n            \"-\" +\n            date.getDate() +\n            \"-\" +\n            date.getFullYear();\n          dates.push(formattedDate);\n          weights.push(stats.max);\n        });\n        setChartData({\n          labels: dates,\n          datasets: [\n            {\n              label: \"weight\",\n              data: weights,\n              backgroundColor: \"#27e77f\",\n              borderColor: \"#27e77f\",\n              borderWidth: 2,\n              fill: false,\n            },\n          ],\n        });\n      })\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    chart();\n  }, [props.exercise]);\n\n  return (\n    <div className=\"graph\">\n      {chartData && (\n        <Line\n          data={chartData}\n          options={{\n            title: {\n              display: true,\n              text: `${props.exercise.name.toUpperCase()}`,\n              fontSize: 20,\n            },\n            responsive: true,\n            maintainAspectRatio: false,\n            showLine: true,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n",
    "import React, { useState, useEffect } from \"react\";\n\nimport \"./Progress.css\";\nimport HeaderButton from \"../components/HeaderButton\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport Chart from \"../components/Chart\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst Progress = (props) => {\n  const [exercises, setExercises] = useState();\n  const [showExercises, setShowExercises] = useState(false);\n  const [selected, setSelected] = useState();\n  const [error, setError] = useState();\n\n  useEffect(async () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user) {\n      return;\n    }\n    const userId = user.userId;\n\n    try {\n      const result = await fetch(`/api/max/${userId}`);\n      const data = await result.json();\n      setExercises(data);\n    } catch (err) {\n      setError(\"Network error. Try again later.\");\n    }\n  }, []);\n\n  return (\n    <div className=\"progress\">\n      <div className=\"progress__title\">\n        <TimelineIcon style={{ fontSize: 100 }} />\n        <h3 className=\"progress__text\">PROGRESS</h3>\n      </div>\n      {!selected && (\n        <div className=\"progress__instructions\">\n          Select an exercise to view a graph of your progress\n        </div>\n      )}\n      {selected && <Chart exercise={selected} />}\n      {error ? <p className=\"progress__error\">{error}</p> : null}\n      <div\n        onClick={() => setShowExercises(true)}\n        className=\"progress__select__exercise\"\n      >\n        <p className=\"progress__select__exercise--text\">select exercise</p>\n        <AddIcon className=\"progress__select__icon\" style={{ fontSize: 30 }} />\n      </div>\n      {exercises && showExercises && (\n        <div className=\"progress__exercise__container\">\n          <div className=\"progress__exercise__cancel\">\n            <span onClick={() => setShowExercises(false)}>cancel</span>\n          </div>\n          <div className=\"progress__exercise__list\">\n            {exercises && exercises.length ? (\n              exercises.map((exercise) => {\n                return (\n                  <p\n                    onClick={() => {\n                      setSelected(exercise);\n                      setShowExercises(false);\n                    }}\n                    key={exercise.exercise_id}\n                    className=\"progress__exercise\"\n                  >\n                    {exercise.name}\n                  </p>\n                );\n              })\n            ) : (\n              <p className=\"progress__error\">\n                No exercise data found. Complete a workout to view progress.\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Progress;\n",
    "import React, { useState, useEffect } from \"react\";\nimport \"./Records.css\";\n\nimport HeaderButton from \"../components/HeaderButton\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\n\nconst Records = (props) => {\n  const [max, setMax] = useState();\n  const [error, setError] = useState();\n\n  useEffect(async () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user) {\n      return;\n    }\n    const userId = user.userId;\n\n    try {\n      const result = await fetch(`/api/max/${userId}`);\n      const data = await result.json();\n      setMax(data);\n    } catch (err) {\n      setError(\"Network error. Try again later.\");\n    }\n  }, []);\n\n  return (\n    <div className=\"records\">\n      <div className=\"records__title\">\n        <FlagIcon className=\"records__icon\" style={{ fontSize: 100 }} />\n        <h3 className=\"records__text\">RECORDS</h3>\n      </div>\n      <div className=\"records__instructions\">\n        <p className=\"records__instructions--1\">\n          Each row is the heaviest weight lifted for the given exercise\n        </p>\n      </div>\n      <div className=\"records__data\">\n        {error ? <p className=\"records__error\">{error}</p> : null}\n        <div className=\"records__data__label\">\n          <p className=\"records__data__label--exercise\">Exercise</p>\n          <p className=\"records__data__label--weight\">Weight</p>\n        </div>\n        {max && max.length ? (\n          max.map((exercise) => {\n            return (\n              <div key={exercise.exercise_id} className=\"records__data__row\">\n                <p className=\"records__data__row--exercise\">{exercise.name}</p>\n                <p className=\"records__data__row--weight\">\n                  {exercise.max_weight}\n                </p>\n              </div>\n            );\n          })\n        ) : (\n          <p className=\"records__message\">No exercise data available</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Records;\n",
    "import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const isAuthenticated = !!user;\n\n  return isAuthenticated ? (\n    <Route {...rest} render={(props) => <Component {...rest} {...props} />} />\n  ) : (\n    <Redirect to=\"/login\" />\n  );\n};\n\nexport default ProtectedRoute;\n",
    "import React from \"react\";\n\nconst Header = () => {\n  return (\n    <h1 className=\"title\">\n      <span className=\"title__text title__text--1\">Stay Fi</span>\n      <span className=\"title__text title__text--2\">T</span>\n    </h1>\n  );\n};\n\nexport default Header;\n",
    "import React from \"react\";\n\nimport \"./HomeLogout.css\";\nimport HeaderButton from \"./HeaderButton\";\n\nconst HomeLogout = (props) => {\n  return (\n    <div className=\"homelogout\">\n      {props.token ? (\n        <>\n          <HeaderButton text=\"home\" />\n          <HeaderButton text=\"logout\" logout={props.logout} />{\" \"}\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default HomeLogout;\n",
    "import React, { useState, useEffect } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Home from \"./pages/Home\";\nimport Workout from \"./pages/Workout\";\nimport History from \"./pages/History\";\nimport Progress from \"./pages/Progress\";\nimport Records from \"./pages/Records\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Header from \"./components/Header\";\nimport HomeLogout from \"./components/HomeLogout\";\n\nconst App = () => {\n  const [token, setToken] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      setToken(user.token);\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    if (!email || !password) {\n      setError(\"Please enter email and password\");\n    }\n    setLoading(true);\n    const options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email: email, password: password }),\n    };\n    try {\n      const result = await fetch(\n        \"/api/authenticate\",\n        options\n      );\n      const responseData = await result.json();\n      if (!result.ok) {\n        throw new Error(responseData);\n      }\n      setToken(responseData.token);\n      localStorage.setItem(\n        \"user\",\n        JSON.stringify({\n          userId: responseData.userId,\n          token: responseData.token,\n        })\n      );\n      setError(null);\n    } catch (err) {\n      setError(err.message || \"Something went wrong\");\n      setLoading(false);\n      return false;\n    }\n    setLoading(false);\n    return true;\n  };\n\n  const logout = () => {\n    setToken(null);\n    setError(null);\n    localStorage.removeItem(\"user\");\n  };\n\n  return (\n    <React.Fragment>\n      <Router>\n        <HomeLogout logout={logout} token={token} />\n        <Header />\n        <Switch>\n          <Route\n            path=\"/login\"\n            render={() => (\n              <Login error={error} loading={loading} login={login} />\n            )}\n          />\n          <Route path=\"/signup\" component={Signup} />\n          <ProtectedRoute path=\"/workout\" logout={logout} component={Workout} />\n          <ProtectedRoute path=\"/history\" logout={logout} component={History} />\n          <ProtectedRoute\n            path=\"/progress\"\n            logout={logout}\n            component={Progress}\n          />\n          <ProtectedRoute path=\"/records\" logout={logout} component={Records} />\n          <ProtectedRoute path=\"/\" exact logout={logout} component={Home} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"
  ],
  "sourceRoot": ""
}
